@{
    ViewBag.Title = "请假";
}
@Html.AntiForgeryToken()
<style type="text/css">
    .time-input {
        width: 220px;
        float: left;
    }

    .clearBoth {
        clear: both;
    }
</style>

<div id="leave" v-cloak>
    <h3 class="ui center aligned header">请假</h3>
    <div class="ui text container">
        <div class="ui segments form">
            <div class="ui segment">
                <div class="field"> <strong>用户姓名：{{userName}}</strong></div>
            </div>
            <div class="ui segment">
                <div class="field"> <strong>备注类型：请假</strong></div>
            </div>
            <div class="ui segment">
                <div class="field">
                    <div class="ui input fluid">
                        <input type="text" maxlength="50" v-model="addMarkData.title" placeholder="输入请假标题，1~20个字符">
                    </div>
                </div>
            </div>
            <div class="ui segment">
                <div class="field">
                    <select class="ui small medium search dropdown left" id="selectUserName"></select>
                </div>
            </div>
            <div class="ui segment">
                <div class="field" id="uname-tag">
                </div>
            </div>
            <div class="ui segment">
                <div class="field">
                    <div class="ui calendar time-input" id="leftTime">
                        <div class="ui input left icon">
                            <i class="calendar icon"></i>
                            <input type="text" placeholder="请假起始时间" />
                        </div>
                    </div>
                    <span style="height:38px;line-height:38px;float:left;margin-right:10px;padding-left:5px;padding-right:5px;">~</span>
                    <div class="ui calendar time-input" id="rightTime">
                        <div class="ui input left icon">
                            <i class="calendar icon"></i>
                            <input type="text" placeholder="请假结束时间" />
                        </div>
                    </div>
                    <div class="clearBoth"></div>
                </div>
            </div>
            <div class="ui segment">
                <div class="field">
                    <div class="ui input fluid">
                        <textarea rows="2" maxlength="1000" style="min-height:200px;" placeholder="正文内容，务必在1000个字符以内" id="markReason"></textarea>
                    </div>
                </div>
            </div>
            <div class="ui segment">
                <div class="field">
                    <div class="actions">
                        <button class="ui success button left floated" id="btnCancle">预览 </button>
                        <button class="ui positive right floated labeled icon button">确定 <i class="checkmark icon"></i> </button>
                    </div>
                    <div style="clear:both;"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div></div>
@Html.AntiForgeryToken()
<script type="text/javascript">
    let __RequestVerificationToken = $('input[name="__RequestVerificationToken"]').val();
    let param = {
        userId:@ViewBag.UserId,
        roleId :@ViewBag.RoleId,
        userName: "@ViewBag.UserName",
        groupId: '@ViewBag.GroupId',
        addMarkData: {
            title: "",
            startTime: "",
            endTime: "",
            content: ""
        }
    };
    $(function () {
        init();
    });
    function init() {
        var vm = new Vue({
            el: "#leave",
            data: () =>(param),
            mounted() {
                initPage(this);
            },
            methods: {
                /**
                * 预览展示
                */
                preview() {

                },
                getUserAll() {
                    let _self = this;
                    let req = $.ajax({
                        type: 'POST',
                        url: bhConfig.GetUserAll,
                        data: { '__RequestVerificationToken': __RequestVerificationToken },
                        dataType: "JSON",
                        cache: false
                    });
                    req.done(function (res) {
                        if (res == null || res == "")
                            return helper.toolTipBox("操作失败");
                        if (res.MsgStatus) {
                            $('#selectUserName').children('option').remove();
                            $('#selectUserName').append('<option value="-1">请输入并选择通知人员姓名</option>');
                            res.MsgContent.forEach(function (item) {
                                $('#selectUserName').append('<option value="' + item.UserId + '">' + item.UserName + '</option>');
                            });
                            $('#selectUserName').dropdown('set value', _self.userId);
                        }
                    });
                    req.always(() => {
                        $('#selectUserName').dropdown('setting', 'onChange', function (id, val) {
                            if (id < 0) {
                                return;
                            }
                            if (_self.UserId != id)
                                _self.UserId = parseInt(id);
                            let items = $("#uname-tag>a");
                            if (items.length <= 0) {
                                $('#uname-tag').append(' <a class="ui label" u-id=' + id + '>' + val + '<i class="delete icon" onclick="removeSelf(this)"></i> </a>');
                            } else {
                                if (items.length >= 8) {
                                    helper.toolTipBox("最多只能选择8个通知人员");
                                    return;
                                }
                                let vals = items.filter((i, e) => {
                                    return $(e).text().trim() == val.trim();
                                });
                                if (!vals || vals.length <= 0) {
                                    $('#uname-tag').append(' <a class="ui label" u-id=' + id + '>' + val + '<i class="delete icon" onclick="removeSelf(this)"></i> </a>');
                                }
                            }
                        });
                    });
                }
            },
            filters: {

            }
        });
        window.vm = vm;
    }
    function removeSelf(self) {
        $(self).parent('a').remove();
    }
    function initPage(_self) {
        let timeSetting = {
            type: 'datetime',
            formatter: { // 自定义日期的格式
                date: function (date, settings) {
                    if (!date) return '';
                    var year = date.getFullYear();
                    var month = date.getMonth() + 1;
                    var day = date.getDate();

                    month = month < 10 ? '0' + month : month;
                    day = day < 10 ? '0' + day : day;

                    return year + '-' + month + '-' + day;
                },
                time: function (date, settings, forCalendar) {
                    if (!date) return '';
                    var hour = date.getHours();
                    var minute = date.getMinutes();
                    hour = hour < 10 ? '0' + hour : hour;
                    minute = minute < 10 ? '0' + minute : minute;
                    return hour + ':' + minute;
                },
            },
            ampm: false,
            disableMinute:true,
            text: {
                days: ['日', '一', '二', '三', '四', '五', '六'],
                months: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],
                monthsShort: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],
                today: '今天',
                now: '当前',
                am: ' am',
                pm: ' pm'
            },
            minDate: new Date("@ViewBag.LeftTime"),
            maxDate: new Date("@ViewBag.RightTime")
        };
        let leftTimeSetting = $.extend({ endCalendar: "#rightTime" }, timeSetting);
        let rightTimeSetting = $.extend({ startCalendar : "#leftTime" }, timeSetting);
        $('#leftTime').calendar(leftTimeSetting);
        $('#rightTime').calendar(rightTimeSetting);
        _self.getUserAll();
    }
</script>